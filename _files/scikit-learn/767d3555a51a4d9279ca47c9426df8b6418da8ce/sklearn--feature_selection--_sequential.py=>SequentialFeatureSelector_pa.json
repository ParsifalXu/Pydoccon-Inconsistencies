{
    "param": {
        "estimator": "estimator instance An unfitted estimator.",
        "n_features_to_select": "\"auto\", int or float, default='warn' If `\"auto\"`, the behaviour depends on the `tol` parameter:  - if `tol` is not `None`, then features are selected while the score change does not exceed `tol`. - otherwise, half of the features are selected.  If integer, the parameter is the absolute number of features to select. If float between 0 and 1, it is the fraction of features to select.  .. versionadded:: 1.1 The option `\"auto\"` was added in version 1.1.  .. versionchanged:: 1.3 The default changed from `\"warn\"` to `\"auto\"` in 1.3.",
        "tol": "float, default=None If the score is not incremented by at least `tol` between two consecutive feature additions or removals, stop adding or removing.  `tol` can be negative when removing features using `direction=\"backward\"`. It can be useful to reduce the number of features at the cost of a small decrease in the score.  `tol` is enabled only when `n_features_to_select` is `\"auto\"`.  .. versionadded:: 1.1",
        "direction": "{'forward', 'backward'}, default='forward' Whether to perform forward selection or backward selection.",
        "scoring": "str or callable, default=None A single str (see :ref:`scoring_parameter`) or a callable (see :ref:`scoring`) to evaluate the predictions on the test set.  NOTE that when using a custom scorer, it should return a single value.  If None, the estimator's score method is used.",
        "cv": "int, cross-validation generator or an iterable, default=None Determines the cross-validation splitting strategy. Possible inputs for cv are:  - None, to use the default 5-fold cross validation, - integer, to specify the number of folds in a `(Stratified)KFold`, - :term:`CV splitter`, - An iterable yielding (train, test) splits as arrays of indices.  For integer/None inputs, if the estimator is a classifier and ``y`` is either binary or multiclass, :class:`StratifiedKFold` is used. In all other cases, :class:`KFold` is used. These splitters are instantiated with `shuffle=False` so the splits will be the same across calls.  Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here.",
        "n_jobs": "int, default=None Number of jobs to run in parallel. When evaluating a new feature to add or remove, the cross-validation procedure is parallel over the folds. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
    },
    "attr": {
        "n_features_in_": "int Number of features seen during :term:`fit`. Only defined if the underlying estimator exposes such an attribute when fit.  .. versionadded:: 0.24",
        "feature_names_in_": "ndarray of shape (`n_features_in_`, ) Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.  .. versionadded:: 1.0",
        "n_features_to_select_": "int The number of features that were selected.",
        "support_": "ndarray of shape (n_features, ), dtype=bool The mask of selected features."
    },
    "pa": {
        "estimator": "estimator instance An unfitted estimator.",
        "n_features_to_select": "\"auto\", int or float, default='warn' If `\"auto\"`, the behaviour depends on the `tol` parameter:  - if `tol` is not `None`, then features are selected while the score change does not exceed `tol`. - otherwise, half of the features are selected.  If integer, the parameter is the absolute number of features to select. If float between 0 and 1, it is the fraction of features to select.  .. versionadded:: 1.1 The option `\"auto\"` was added in version 1.1.  .. versionchanged:: 1.3 The default changed from `\"warn\"` to `\"auto\"` in 1.3.",
        "tol": "float, default=None If the score is not incremented by at least `tol` between two consecutive feature additions or removals, stop adding or removing.  `tol` can be negative when removing features using `direction=\"backward\"`. It can be useful to reduce the number of features at the cost of a small decrease in the score.  `tol` is enabled only when `n_features_to_select` is `\"auto\"`.  .. versionadded:: 1.1",
        "direction": "{'forward', 'backward'}, default='forward' Whether to perform forward selection or backward selection.",
        "scoring": "str or callable, default=None A single str (see :ref:`scoring_parameter`) or a callable (see :ref:`scoring`) to evaluate the predictions on the test set.  NOTE that when using a custom scorer, it should return a single value.  If None, the estimator's score method is used.",
        "cv": "int, cross-validation generator or an iterable, default=None Determines the cross-validation splitting strategy. Possible inputs for cv are:  - None, to use the default 5-fold cross validation, - integer, to specify the number of folds in a `(Stratified)KFold`, - :term:`CV splitter`, - An iterable yielding (train, test) splits as arrays of indices.  For integer/None inputs, if the estimator is a classifier and ``y`` is either binary or multiclass, :class:`StratifiedKFold` is used. In all other cases, :class:`KFold` is used. These splitters are instantiated with `shuffle=False` so the splits will be the same across calls.  Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here.",
        "n_jobs": "int, default=None Number of jobs to run in parallel. When evaluating a new feature to add or remove, the cross-validation procedure is parallel over the folds. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details.",
        "n_features_in_": "int Number of features seen during :term:`fit`. Only defined if the underlying estimator exposes such an attribute when fit.  .. versionadded:: 0.24",
        "feature_names_in_": "ndarray of shape (`n_features_in_`, ) Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.  .. versionadded:: 1.0",
        "n_features_to_select_": "int The number of features that were selected.",
        "support_": "ndarray of shape (n_features, ), dtype=bool The mask of selected features."
    }
}