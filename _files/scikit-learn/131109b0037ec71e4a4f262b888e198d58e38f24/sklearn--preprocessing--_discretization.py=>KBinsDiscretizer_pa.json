{
    "param": {
        "n_bins": "int or array-like of shape (n_features, ), default=5 The number of bins to produce. Raises ValueError if ``n_bins < 2``.",
        "encode": "{'onehot', 'onehot-dense', 'ordinal'}, default='onehot' Method used to encode the transformed result.  - 'onehot': Encode the transformed result with one-hot encoding and return a sparse matrix. Ignored features are always stacked to the right. - 'onehot-dense': Encode the transformed result with one-hot encoding and return a dense array. Ignored features are always stacked to the right. - 'ordinal': Return the bin identifier encoded as an integer value.",
        "strategy": "{'uniform', 'quantile', 'kmeans'}, default='quantile' Strategy used to define the widths of the bins.  - 'uniform': All bins in each feature have identical widths. - 'quantile': All bins in each feature have the same number of points. - 'kmeans': Values in each bin have the same nearest center of a 1D k-means cluster.  For an example of the different strategies see: :ref:`sphx_glr_auto_examples_preprocessing_plot_discretization_strategies.py`.",
        "dtype": "{np.float32, np.float64}, default=None The desired data-type for the output. If None, output dtype is consistent with input dtype. Only np.float32 and np.float64 are supported.  .. versionadded:: 0.24",
        "subsample": "int or None, default=200_000 Maximum number of samples, used to fit the model, for computational efficiency. `subsample=None` means that all the training samples are used when computing the quantiles that determine the binning thresholds. Since quantile computation relies on sorting each column of `X` and that sorting has an `n log(n)` time complexity, it is recommended to use subsampling on datasets with a very large number of samples.  .. versionchanged:: 1.3 The default value of `subsample` changed from `None` to `200_000` when `strategy=\"quantile\"`.  .. versionchanged:: 1.5 The default value of `subsample` changed from `None` to `200_000` when `strategy=\"uniform\"` or `strategy=\"kmeans\"`.",
        "random_state": "int, RandomState instance or None, default=None Determines random number generation for subsampling. Pass an int for reproducible results across multiple function calls. See the `subsample` parameter for more details. See :term:`Glossary <random_state>`.  .. versionadded:: 1.1"
    },
    "attr": {
        "bin_edges_": "ndarray of ndarray of shape (n_features, ) The edges of each bin. Contain arrays of varying shapes ``(n_bins_, )`` Ignored features will have empty arrays.",
        "n_bins_": "ndarray of shape (n_features, ), dtype=np.int64 Number of bins per feature. Bins whose width are too small (i.e., <= 1e-8) are removed with a warning.",
        "n_features_in_": "int Number of features seen during :term:`fit`.  .. versionadded:: 0.24",
        "feature_names_in_": "ndarray of shape (`n_features_in_`, ) Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.  .. versionadded:: 1.0"
    },
    "pa": {
        "n_bins": "int or array-like of shape (n_features, ), default=5 The number of bins to produce. Raises ValueError if ``n_bins < 2``.",
        "encode": "{'onehot', 'onehot-dense', 'ordinal'}, default='onehot' Method used to encode the transformed result.  - 'onehot': Encode the transformed result with one-hot encoding and return a sparse matrix. Ignored features are always stacked to the right. - 'onehot-dense': Encode the transformed result with one-hot encoding and return a dense array. Ignored features are always stacked to the right. - 'ordinal': Return the bin identifier encoded as an integer value.",
        "strategy": "{'uniform', 'quantile', 'kmeans'}, default='quantile' Strategy used to define the widths of the bins.  - 'uniform': All bins in each feature have identical widths. - 'quantile': All bins in each feature have the same number of points. - 'kmeans': Values in each bin have the same nearest center of a 1D k-means cluster.  For an example of the different strategies see: :ref:`sphx_glr_auto_examples_preprocessing_plot_discretization_strategies.py`.",
        "dtype": "{np.float32, np.float64}, default=None The desired data-type for the output. If None, output dtype is consistent with input dtype. Only np.float32 and np.float64 are supported.  .. versionadded:: 0.24",
        "subsample": "int or None, default=200_000 Maximum number of samples, used to fit the model, for computational efficiency. `subsample=None` means that all the training samples are used when computing the quantiles that determine the binning thresholds. Since quantile computation relies on sorting each column of `X` and that sorting has an `n log(n)` time complexity, it is recommended to use subsampling on datasets with a very large number of samples.  .. versionchanged:: 1.3 The default value of `subsample` changed from `None` to `200_000` when `strategy=\"quantile\"`.  .. versionchanged:: 1.5 The default value of `subsample` changed from `None` to `200_000` when `strategy=\"uniform\"` or `strategy=\"kmeans\"`.",
        "random_state": "int, RandomState instance or None, default=None Determines random number generation for subsampling. Pass an int for reproducible results across multiple function calls. See the `subsample` parameter for more details. See :term:`Glossary <random_state>`.  .. versionadded:: 1.1",
        "bin_edges_": "ndarray of ndarray of shape (n_features, ) The edges of each bin. Contain arrays of varying shapes ``(n_bins_, )`` Ignored features will have empty arrays.",
        "n_bins_": "ndarray of shape (n_features, ), dtype=np.int64 Number of bins per feature. Bins whose width are too small (i.e., <= 1e-8) are removed with a warning.",
        "n_features_in_": "int Number of features seen during :term:`fit`.  .. versionadded:: 0.24",
        "feature_names_in_": "ndarray of shape (`n_features_in_`, ) Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.  .. versionadded:: 1.0"
    }
}