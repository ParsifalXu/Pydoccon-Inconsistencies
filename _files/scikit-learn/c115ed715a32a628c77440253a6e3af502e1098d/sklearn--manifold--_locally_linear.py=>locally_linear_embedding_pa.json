{
    "param": {
        "X": "{array-like, NearestNeighbors} Sample data, shape = (n_samples, n_features), in the form of a numpy array or a NearestNeighbors object.",
        "n_neighbors": "int number of neighbors to consider for each point.",
        "n_components": "int number of coordinates for the manifold.",
        "reg": "float, default=1e-3 regularization constant, multiplies the trace of the local covariance matrix of the distances.",
        "eigen_solver": "{'auto', 'arpack', 'dense'}, default='auto' auto : algorithm will attempt to choose the best method for input data  arpack : use arnoldi iteration in shift-invert mode. For this method, M may be a dense matrix, sparse matrix, or general linear operator. Warning: ARPACK can be unstable for some problems.  It is best to try several random seeds in order to check results.  dense  : use standard dense matrix operations for the eigenvalue decomposition.  For this method, M must be an array or matrix type.  This method should be avoided for large problems.",
        "tol": "float, default=1e-6 Tolerance for 'arpack' method Not used if eigen_solver=='dense'.",
        "max_iter": "int, default=100 maximum number of iterations for the arpack solver.",
        "method": "{'standard', 'hessian', 'modified', 'ltsa'}, default='standard' standard : use the standard locally linear embedding algorithm. see reference [1]_ hessian  : use the Hessian eigenmap method.  This method requires n_neighbors > n_components * (1 + (n_components + 1) / 2. see reference [2]_ modified : use the modified locally linear embedding algorithm. see reference [3]_ ltsa     : use local tangent space alignment algorithm see reference [4]_",
        "hessian_tol": "float, default=1e-4 Tolerance for Hessian eigenmapping method. Only used if method == 'hessian'",
        "modified_tol": "float, default=1e-12 Tolerance for modified LLE method. Only used if method == 'modified'",
        "random_state": "int, RandomState instance, default=None Determines the random number generator when ``solver`` == 'arpack'. Pass an int for reproducible results across multiple function calls. See :term: `Glossary <random_state>`.",
        "n_jobs": "int or None, default=None The number of parallel jobs to run for neighbors search. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
    },
    "attr": {},
    "pa": {
        "X": "{array-like, NearestNeighbors} Sample data, shape = (n_samples, n_features), in the form of a numpy array or a NearestNeighbors object.",
        "n_neighbors": "int number of neighbors to consider for each point.",
        "n_components": "int number of coordinates for the manifold.",
        "reg": "float, default=1e-3 regularization constant, multiplies the trace of the local covariance matrix of the distances.",
        "eigen_solver": "{'auto', 'arpack', 'dense'}, default='auto' auto : algorithm will attempt to choose the best method for input data  arpack : use arnoldi iteration in shift-invert mode. For this method, M may be a dense matrix, sparse matrix, or general linear operator. Warning: ARPACK can be unstable for some problems.  It is best to try several random seeds in order to check results.  dense  : use standard dense matrix operations for the eigenvalue decomposition.  For this method, M must be an array or matrix type.  This method should be avoided for large problems.",
        "tol": "float, default=1e-6 Tolerance for 'arpack' method Not used if eigen_solver=='dense'.",
        "max_iter": "int, default=100 maximum number of iterations for the arpack solver.",
        "method": "{'standard', 'hessian', 'modified', 'ltsa'}, default='standard' standard : use the standard locally linear embedding algorithm. see reference [1]_ hessian  : use the Hessian eigenmap method.  This method requires n_neighbors > n_components * (1 + (n_components + 1) / 2. see reference [2]_ modified : use the modified locally linear embedding algorithm. see reference [3]_ ltsa     : use local tangent space alignment algorithm see reference [4]_",
        "hessian_tol": "float, default=1e-4 Tolerance for Hessian eigenmapping method. Only used if method == 'hessian'",
        "modified_tol": "float, default=1e-12 Tolerance for modified LLE method. Only used if method == 'modified'",
        "random_state": "int, RandomState instance, default=None Determines the random number generator when ``solver`` == 'arpack'. Pass an int for reproducible results across multiple function calls. See :term: `Glossary <random_state>`.",
        "n_jobs": "int or None, default=None The number of parallel jobs to run for neighbors search. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
    }
}